name: 'MacOS-CI'

on:
  push:
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-12
        python-version:
          - 3.12

    env:
      HOMEBREW_VERBOSE: 1
      PYTHON_VERSION_STRING: "python@${{ matrix.python-version }}"

    steps:
      - name: Check out repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 #v4.1.1
        with:
          fetch-depth: 2
          submodules: false

      - name: Bootstrap it
        run: script/bootstrap-on-macos.sh

      - name: Build it
        env:
          MY_OS_NAME: macos
          FLAGS:      '-DCMAKE_FIND_FRAMEWORK=LAST -DCMAKE_FIND_APPBUNDLE=LAST'
        run: script/cibuild $FLAGS

#      - name: Test
#        working-directory: ${{github.workspace}}/build
#        env:
#          GTEST_OUTPUT: xml
#          GTEST_COLOR: 1
#        run: ctest -V
#
#      - name: Upload test results
#        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce #v3.1.2
#        if: failure()
#        with:
#          name: test_results_xml
#          path: ${{github.workspace}}/build/test-results/**/*.xml
