name: 'GH Actions - PR'

on: [ pull_request ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.allow_failure }}

    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        allow_failure: [false]
        FROM: ['ubuntu:jammy', 'ubuntu:focal', 'ubuntu:bionic']
        USE_PYTHON_3: ['ON']
        COMPILER: ['gcc', 'clang']
        OpenGL_GL_PREFERENCE: ['LEGACY', 'GLVND']
        include:
          - FROM:     'linuxmintd/mint20-amd64'
            COMPILER: 'clang'
          - FROM:     'debian:bullseye'
            COMPILER: 'clang'
          - FROM:     'debian:buster'
            COMPILER: 'clang'
          - FROM:     'opensuse/leap'
            COMPILER: 'clang'
          - FROM:     'fedora:36'
            COMPILER: 'clang'
          - FROM:     'fedora:35'
            COMPILER: 'clang'
          - FROM:     'fedora:34'
            COMPILER: 'clang'
          - FROM:     'rockylinux/rockylinux'
            COMPILER: 'clang'
          - FROM:     'manjarolinux/base'
            COMPILER: 'clang'
            USE_PYTHON_3: 'ON'
            OpenGL_GL_PREFERENCE: 'LEGACY'
            allow_failure: true
          - FROM:     'manjarolinux/base'
            COMPILER: 'clang'
            USE_PYTHON_3: 'ON'
            OpenGL_GL_PREFERENCE: 'GLVND'
            allow_failure: true

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        # We must fetch at least the immediate parents so that if this is
        # a pull request then we can checkout the head.
        fetch-depth: 2
        submodules: false

    # Ensure PRs are built against the PR Head
    # As opposed to the merge commit
    - name: Move to PR HEAD
      run: git checkout ${{ github.event.pull_request.head.sha }}

    - name: Extract short SHA
      shell: bash
      run: |
        echo "SHORT_SHA=`git rev-parse --short ${{ github.event.pull_request.head.sha }}`" >> $GITHUB_ENV
    - name: Test short SHA
      run: |
        echo "${SHORT_SHA}"
    - name: Run CI
      env:
        FROM:       ${{ matrix.FROM }}
        COMPILER:   ${{ matrix.COMPILER }}
        FLAGS:      '-DUSE_PYTHON_3=${{ matrix.USE_PYTHON_3 }} -DOpenGL_GL_PREFERENCE=${{ matrix.OpenGL_GL_PREFERENCE }}'
        MY_OS_NAME: linux
        IS_RELEASE: 0
      run: script/cibuild $FLAGS
