#!/usr/bin/env bash
#====================================
# @file   : cibuild
# @brief  : Builds Vega Strike for purposes of CI/CD (GitHub Actions)
# @usage  : ./script/cibuild
# @param  : none
#====================================

set -e

if [ "$COMPILER" == "gcc" ]
then
    export CC=gcc
    export CXX=g++
elif [ "$COMPILER" == "clang" ]
then
    export CC=clang
    export CXX=clang++
fi

if [ "$MY_OS_NAME" == "linux" ]
then
    SRC_DOCKER_IMG_NAME="vegastrike/vega-strike-build-env:$(echo $FROM | sed 's/:/_/' | sed 's/\//_/')"
    DST_DOCKER_IMG_NAME="building-vega-strike:$(echo $FROM | sed 's/:/_/' | sed 's/\//_/')"
    DOCKER_CONTAINER_NAME="building-vega-strike_$(echo $FROM | sed 's/:/_/' | sed 's/\//_/')"
    docker build --build-arg from=$SRC_DOCKER_IMG_NAME -t $DST_DOCKER_IMG_NAME .
    docker run --env CC=$CC --env CXX=$CXX --env IS_RELEASE=$IS_RELEASE --env TAG_NAME=$TAG_NAME --env FLAGS=$FLAGS --name $DOCKER_CONTAINER_NAME $DST_DOCKER_IMG_NAME $FLAGS
    docker cp $DOCKER_CONTAINER_NAME:/usr/src/Vega-Strike-Engine-Source/bin .
    if [ $IS_RELEASE -eq 1 ]
    then
        docker cp $DOCKER_CONTAINER_NAME:/usr/src/Vega-Strike-Engine-Source/packages .
    fi
    docker cp $DOCKER_CONTAINER_NAME:/usr/src/Vega-Strike-Engine-Source/build/test-results .
    docker rm $DOCKER_CONTAINER_NAME
elif [ "$MY_OS_NAME" == "macos" ]
then
    script/build.sh -DCMAKE_BUILD_TYPE=RelWithDebInfo $@
    # On macOS, the following is done by the calling CI workflow
    # ctest -V
    # Not building successfully yet, so shouldn't try to package it
else
    script/docker-entrypoint.sh $@
fi

echo "cibuild Done!"
